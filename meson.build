project('Tomb1Main', ['c'],
  default_options: [
    'c_std=c11',
    'warning_level=2',
  ],
)

warning_level = 3
version = meson.project_version()
version_pretty = 'v' + version

git = find_program('git', required: false)
if git.found()
  gitdesc = run_command(git, 'describe', '--abbrev=7', '--tags')
  if gitdesc.returncode() == 0
    version_pretty = gitdesc.stdout().strip()
  endif
endif

c_compiler = meson.get_compiler('c')

is_mingw = c_compiler.get_id() == 'gcc' and host_machine.system() == 'windows'
if is_mingw
  add_project_link_arguments([], language: 'c')
endif

build_opts = [
  '-Wno-unused',
  '-D_GNU_SOURCE',
  '-DVERSION="T1M ' + version_pretty + '"'
]
c_opts = []
add_project_arguments(build_opts + c_opts, language: 'c')

dep_opengl32 = c_compiler.find_library('opengl32')
dep_dinput8 = c_compiler.find_library('dinput8')
dep_dxguid = c_compiler.find_library('dxguid')

dep_avcodec = dependency('libavcodec', static: true)
dep_avformat = dependency('libavformat', static: true)
dep_avutil = dependency('libavutil', static: true)
dep_swscale = dependency('libswscale', static: true)
dep_swresample = dependency('libswresample', static: true)

dep_sdl2 = dependency('SDL2', static: true)

# autogenerated files
resources = []
python3 = find_program('python3', required: false)
if python3.found()
  custom_target(
    'fake_init',
    output: ['fake_init'],
    command: [python3, meson.source_root() + '/scripts/generate_init'],
    build_by_default: true
  )
  version_rc = custom_target(
    'fake_version',
    output: ['version.rc'],
    command: [python3, meson.source_root() + '/scripts/generate_version', '--version', version_pretty, '--output', '@OUTPUT0@'],
    build_always: true
  )
  icon_rc = custom_target(
    'fake_icon',
    output: ['icon.rc'],
    command: [python3, meson.source_root() + '/scripts/generate_version', '--version', version_pretty, '--output', '@OUTPUT0@'],
  )
  if host_machine.system() == 'windows'
    windows = import('windows')
    resources = [
      windows.compile_resources(version_rc),
      windows.compile_resources(icon_rc),
    ]
  endif
endif

sources = [
  'src/3dsystem/3d_gen.c',
  'src/3dsystem/matrix.c',
  'src/3dsystem/phd_math.c',
  'src/config.c',
  'src/filesystem.c',
  'src/game/box.c',
  'src/game/camera.c',
  'src/game/cinema.c',
  'src/game/clock.c',
  'src/game/collide.c',
  'src/game/control.c',
  'src/game/control_pause.c',
  'src/game/control_util.c',
  'src/game/demo.c',
  'src/game/draw.c',
  'src/game/effect_routines/bubbles.c',
  'src/game/effect_routines/chain_block.c',
  'src/game/effect_routines/dino_stomp.c',
  'src/game/effect_routines/earthquake.c',
  'src/game/effect_routines/explosion.c',
  'src/game/effect_routines/finish_level.c',
  'src/game/effect_routines/flicker.c',
  'src/game/effect_routines/flipmap.c',
  'src/game/effect_routines/flood.c',
  'src/game/effect_routines/lara_effects.c',
  'src/game/effect_routines/powerup.c',
  'src/game/effect_routines/raising_block.c',
  'src/game/effect_routines/sand.c',
  'src/game/effect_routines/stairs2slope.c',
  'src/game/effect_routines/turn_180.c',
  'src/game/effects/blood.c',
  'src/game/effects/exploding_death.c',
  'src/game/effects/gun.c',
  'src/game/effects/gunshot.c',
  'src/game/fmv.c',
  'src/game/game.c',
  'src/game/gamebuf.c',
  'src/game/gameflow.c',
  'src/game/gun/gun.c',
  'src/game/gun/gun_misc.c',
  'src/game/gun/gun_pistols.c',
  'src/game/gun/gun_rifle.c',
  'src/game/hair.c',
  'src/game/input.c',
  'src/game/inventry.c',
  'src/game/invfunc.c',
  'src/game/invvars.c',
  'src/game/items.c',
  'src/game/lara/lara.c',
  'src/game/lara/lara_col.c',
  'src/game/lara/lara_control.c',
  'src/game/lara/lara_draw.c',
  'src/game/lara/lara_look.c',
  'src/game/lara/lara_misc.c',
  'src/game/lara/lara_state.c',
  'src/game/level.c',
  'src/game/lot.c',
  'src/game/music.c',
  'src/game/objects/ai/ape.c',
  'src/game/objects/ai/bacon_lara.c',
  'src/game/objects/ai/baldy.c',
  'src/game/objects/ai/bat.c',
  'src/game/objects/ai/bear.c',
  'src/game/objects/ai/centaur.c',
  'src/game/objects/ai/cowboy.c',
  'src/game/objects/ai/crocodile.c',
  'src/game/objects/ai/larson.c',
  'src/game/objects/ai/lion.c',
  'src/game/objects/ai/mummy.c',
  'src/game/objects/ai/mutant.c',
  'src/game/objects/ai/natla.c',
  'src/game/objects/ai/pierre.c',
  'src/game/objects/ai/pod.c',
  'src/game/objects/ai/raptor.c',
  'src/game/objects/ai/rat.c',
  'src/game/objects/ai/skate_kid.c',
  'src/game/objects/ai/statue.c',
  'src/game/objects/ai/torso.c',
  'src/game/objects/ai/trex.c',
  'src/game/objects/ai/wolf.c',
  'src/game/objects/boat.c',
  'src/game/objects/bridge.c',
  'src/game/objects/cabin.c',
  'src/game/objects/cog.c',
  'src/game/objects/door.c',
  'src/game/objects/effects/blood.c',
  'src/game/objects/effects/body_part.c',
  'src/game/objects/effects/bubble.c',
  'src/game/objects/effects/earthquake.c',
  'src/game/objects/effects/explosion.c',
  'src/game/objects/effects/gunshot.c',
  'src/game/objects/effects/missile.c',
  'src/game/objects/effects/ricochet.c',
  'src/game/objects/effects/splash.c',
  'src/game/objects/effects/twinkle.c',
  'src/game/objects/effects/waterfall.c',
  'src/game/objects/keyhole.c',
  'src/game/objects/misc.c',
  'src/game/objects/pickup.c',
  'src/game/objects/puzzle_hole.c',
  'src/game/objects/save_crystal.c',
  'src/game/objects/scion.c',
  'src/game/objects/switch.c',
  'src/game/objects/trapdoor.c',
  'src/game/objects/traps/damocles_sword.c',
  'src/game/objects/traps/dart.c',
  'src/game/objects/traps/falling_block.c',
  'src/game/objects/traps/falling_ceiling.c',
  'src/game/objects/traps/flame.c',
  'src/game/objects/traps/lava.c',
  'src/game/objects/traps/lightning_emitter.c',
  'src/game/objects/traps/midas_touch.c',
  'src/game/objects/traps/movable_block.c',
  'src/game/objects/traps/pendulum.c',
  'src/game/objects/traps/rolling_ball.c',
  'src/game/objects/traps/rolling_block.c',
  'src/game/objects/traps/spikes.c',
  'src/game/objects/traps/teeth_trap.c',
  'src/game/objects/traps/thors_hammer.c',
  'src/game/option.c',
  'src/game/option_compass.c',
  'src/game/option_control.c',
  'src/game/option_graphics.c',
  'src/game/option_passport.c',
  'src/game/option_sound.c',
  'src/game/output.c',
  'src/game/overlay.c',
  'src/game/people.c',
  'src/game/picture.c',
  'src/game/random.c',
  'src/game/requester.c',
  'src/game/room.c',
  'src/game/savegame.c',
  'src/game/savegame_bson.c',
  'src/game/savegame_legacy.c',
  'src/game/screen.c',
  'src/game/settings.c',
  'src/game/setup.c',
  'src/game/shell.c',
  'src/game/sound.c',
  'src/game/sphere.c',
  'src/game/stats.c',
  'src/game/text.c',
  'src/game/viewport.c',
  'src/gfx/2d/2d_renderer.c',
  'src/gfx/2d/2d_surface.c',
  'src/gfx/3d/3d_renderer.c',
  'src/gfx/3d/vertex_stream.c',
  'src/gfx/blitter.c',
  'src/gfx/context.c',
  'src/gfx/gl/buffer.c',
  'src/gfx/gl/gl_core_3_3.c',
  'src/gfx/gl/program.c',
  'src/gfx/gl/sampler.c',
  'src/gfx/gl/texture.c',
  'src/gfx/gl/utils.c',
  'src/gfx/gl/vertex_array.c',
  'src/gfx/gl/wgl_ext.c',
  'src/gfx/screenshot.c',
  'src/global/vars.c',
  'src/global/vars_platform.c',
  'src/init.c',
  'src/json/bson_parse.c',
  'src/json/bson_write.c',
  'src/json/json_base.c',
  'src/json/json_parse.c',
  'src/json/json_write.c',
  'src/log.c',
  'src/memory.c',
  'src/specific/s_audio.c',
  'src/specific/s_audio_sample.c',
  'src/specific/s_audio_stream.c',
  'src/specific/s_clock.c',
  'src/specific/s_filesystem.c',
  'src/specific/s_fmv.c',
  'src/specific/s_input.c',
  'src/specific/s_misc.c',
  'src/specific/s_output.c',
  'src/specific/s_picture.c',
  'src/specific/s_shell.c',
  resources,
]

dependencies = [
    dep_avcodec,
    dep_avformat,
    dep_avutil,
    dep_dinput8,
    dep_dxguid,
    dep_opengl32,
    dep_sdl2,
    dep_swresample,
    dep_swscale,
  ]

executable(
  'Tomb1Main',
  sources,
  name_prefix: '',
  include_directories: ['src/'],
  dependencies: dependencies,
  link_args: ['-static'],
  gui_app: true,
)
